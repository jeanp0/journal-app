{"version":3,"sources":["firebase/firebase.config.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/types/types.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelectedScreen.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","messages/errors.js","routers/AuthRouter.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","types","fileUpload","file","a","formData","FormData","append","fetch","method","body","response","ok","json","cloudResponse","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","childrenSnap","push","id","data","setActiveNote","note","type","payload","addNewNote","setNotes","startLoadingNotes","dispatch","startSaveNote","getState","url","noteToFirestore","doc","update","Swal","fire","title","refreshNote","deleteNote","useForm","initialState","useState","values","setValues","reset","newState","handleInputChange","event","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","activeNote","text","allowOutsideClick","showConfirmButton","didOpen","showLoading","fileUrl","close","console","log","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","backgroundColor","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelectedScreen","setError","err","finishLoading","startLoginWithEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","startLogout","signOut","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","entries","map","entry","Sidebar","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","RegisterScreen","msgError","password2","isFormValid","trim","length","isRequired","validator","isEmail","nChars","shouldBeAtLeast","shouldBeMatch","isNotValid","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","AppRouter","checking","setChecking","setIsAuthenticated","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6a522e5c.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCDRC0WjTi6gPSemF3iYXcA6H8c496cDCQ\",\n  authDomain: \"react-app-cursos-22516.firebaseapp.com\",\n  projectId: \"react-app-cursos-22516\",\n  storageBucket: \"react-app-cursos-22516.appspot.com\",\n  messagingSenderId: \"537545313326\",\n  appId: \"1:537545313326:web:7e202c8b896600aff223bf\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, googleAuthProvider, firebase };\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport PropTypes from \"prop-types\";\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/auth/login\" />\n        )\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport PropTypes from \"prop-types\";\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","export const types = {\n  login: \"[Auth] login\",\n  logout: \"[Auth] logout\",\n\n  uiSetError: \"[UI] Set error\",\n  uiRemoveError: \"[UI] Remove error\",\n  uiStartLoading: \"[UI] Start loading\",\n  uiFinishLoading: \"[UI] Finish loading\",\n\n  notesSetActive: \"[Notes] Set active note\",\n  notesCreate: \"[Notes] Create note\",\n  notesLoad: \"[Notes] Load all notes\",\n  notesDelete: \"[Notes] Delete note\",\n  notesUpdate: \"[Notes] Update note\",\n  notesUpdateImgUrl: \"[Notes] Update imageURL of note\",\n  notesLogoutAndClean: \"[Notes] Logout and clean data\",\n};\n","export const fileUpload = async (file) => {\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/jean-cloudinary/upload\";\n  const formData = new FormData();\n  formData.append(\"upload_preset\", \"react-journal\");\n  formData.append(\"file\", file);\n  try {\n    const response = await fetch(cloudUrl, {\n      method: \"POST\",\n      body: formData,\n    });\n    if (response.ok) {\n      const cloudResponse = await response.json();\n      return cloudResponse.secure_url;\n    }\n    throw await response.json();\n  } catch (err) {\n    throw err;\n  }\n};\n","import { db } from \"../firebase/firebase.config\";\n\nexport const loadNotes = async (uid) => {\n  const notesSnap = await db.collection(`/${uid}/journal/notes`).get();\n  const notes = [];\n\n  notesSnap.forEach((childrenSnap) => {\n    notes.push({ id: childrenSnap.id, ...childrenSnap.data() });\n  });\n\n  return notes;\n};\n","import Swal from \"sweetalert2\";\nimport { types } from \"../components/types/types\";\nimport { db } from \"../firebase/firebase.config\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { loadNotes } from \"../helpers/loadNotes\";\n\nexport const startCreateNote = () => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    const newNote = {\n      title: \"\",\n      body: \"\",\n      date: new Date().getTime(),\n    };\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(setActiveNote(doc.id, newNote));\n    dispatch(addNewNote(doc.id, newNote));\n  };\n};\n\nexport const setActiveNote = (id, note) => ({\n  type: types.notesSetActive,\n  payload: { id, ...note },\n});\n\nexport const addNewNote = (id, note) => ({\n  type: types.notesCreate,\n  payload: { id, ...note },\n});\n\nexport const setNotes = (notes) => ({\n  type: types.notesLoad,\n  payload: notes,\n});\n\nexport const startLoadingNotes = (uid) => {\n  return async (dispatch) => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\n\nexport const startSaveNote = (note) => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    if (!note.url) delete note.url;\n    const noteToFirestore = { ...note };\n    delete noteToFirestore.id;\n    try {\n      await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n      Swal.fire(\"Saved\", note.title, \"success\");\n    } catch (err) {\n      Swal.fire(\"Error\", note.title, \"error\");\n      // console.error(err);\n    }\n    dispatch(refreshNote(note.id, noteToFirestore));\n  };\n};\n\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdate,\n  payload: { id, note: { ...note, id } },\n});\n\nexport const startUploading = (file) => {\n  return async (dispatch, getState) => {\n    const { active: activeNote } = getState().notes;\n    Swal.fire({\n      title: \"Uploading...\",\n      text: \"Please wait...\",\n      allowOutsideClick: false,\n      showConfirmButton: false,\n      didOpen: () => {\n        Swal.showLoading();\n      },\n    });\n    const fileUrl = await fileUpload(file);\n    Swal.close();\n    activeNote.url = fileUrl;\n    dispatch(startSaveNote(activeNote));\n    console.log(fileUrl);\n  };\n};\n\nexport const startDeleting = (id) => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(deleteNote(id));\n  };\n};\n\nexport const deleteNote = (id) => ({\n  type: types.notesDelete,\n  payload: id,\n});\n\nexport const cleanNotesLogout = () => ({\n  type: types.notesLogoutAndClean,\n});\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = (newState = initialState) => {\n    setValues(newState);\n  };\n\n  const handleInputChange = (event) => {\n    const { target } = event;\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startSaveNote, startUploading } from \"../../actions/notes\";\n\nexport const NotesAppBar = () => {\n  const dispatch = useDispatch();\n  const { active } = useSelector((state) => state.notes);\n\n  const handleSaveClick = () => {\n    dispatch(startSaveNote(active));\n  };\n  const handlePictureClick = () => {\n    document.querySelector(\"#fileSelector\").click();\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    dispatch(startUploading(file));\n  };\n\n  return (\n    <div className=\"notes__appbar\">\n      <span>5 de junio de 2021</span>\n\n      <input\n        id=\"fileSelector\"\n        type=\"file\"\n        name=\"file\"\n        style={{ display: \"none\" }}\n        onChange={handleFileChange}\n      />\n      <div>\n        <button className=\"btn\" type=\"file\" onClick={handlePictureClick}>\n          Picture\n        </button>\n        <button className=\"btn\" onClick={handleSaveClick}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setActiveNote, startDeleting } from \"../../actions/notes\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { NotesAppBar } from \"./NotesAppBar\";\n\nexport const NoteScreen = () => {\n  const dispatch = useDispatch();\n  const { active: note } = useSelector((state) => state.notes);\n  const [formValues, handleInputChange, reset] = useForm(note);\n  const { id, title, body } = formValues;\n  const activeId = useRef(note.id);\n\n  // console.log(\"Redux: \", note.id);\n  // console.log(\"useRef: \", activeId.current);\n  useEffect(() => {\n    // only when note change\n    if (note.id !== activeId.current) {\n      // reset formValues with new state\n      reset(note);\n      // update id ref\n      activeId.current = note.id;\n    }\n  }, [note, reset]);\n\n  useEffect(() => {\n    dispatch(setActiveNote(formValues.id, { ...formValues }));\n  }, [formValues, dispatch]);\n\n  const handleDelete = () => {\n    dispatch(startDeleting(id));\n  };\n\n  return (\n    <div className=\"notes__main-content\" style={{ backgroundColor: \"#fff\" }}>\n      <NotesAppBar />\n      <div className=\"notes__content animate__animated animate__fadeIn animate__animated\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Some awesome title\"\n          className=\"notes__title-input\"\n          autoComplete=\"off\"\n          value={title}\n          onChange={handleInputChange}\n        />\n        <textarea\n          placeholder=\"What happened today\"\n          className=\"notes__textarea\"\n          name=\"body\"\n          value={body}\n          onChange={handleInputChange}\n        ></textarea>\n        {note.url && (\n          <div className=\"notes__image\">\n            <img src={note.url} alt=\"landscape\" />\n          </div>\n        )}\n      </div>\n      <button className=\"btn btn-danger\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const NothingSelectedScreen = () => {\n  return (\n    <div className=\"nothing__main-content\">\n      <p>\n        Select something\n        <br />\n        or create an entry\n      </p>\n      <i className=\"far fa-star fa-4x mt-5\"></i>\n    </div>\n  );\n};\n","import { types } from \"../components/types/types\";\n\nexport const setError = (err) => ({\n  type: types.uiSetError,\n  payload: err,\n});\n\nexport const removeError = () => ({\n  type: types.uiRemoveError,\n});\n\nexport const startLoading = () => ({\n  type: types.uiStartLoading,\n});\n\nexport const finishLoading = () => ({\n  type: types.uiFinishLoading,\n});\n","import { types } from \"../components/types/types\";\nimport { firebase, googleAuthProvider } from \"../firebase/firebase.config\";\nimport { finishLoading, startLoading } from \"./ui\";\nimport Swal from \"sweetalert2\";\nimport { cleanNotesLogout } from \"./notes\";\n\n// acción que hace de middleware\nexport const startLoginWithEmailPassword = (email, password) => {\n  // thunk ofrece el dispath(?)\n  return (dispatch) => {\n    dispatch(startLoading());\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n        dispatch(finishLoading());\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(finishLoading());\n        Swal.fire(\"Error\", err.message, \"error\");\n      });\n  };\n};\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      // autentica automáticamente\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n        dispatch(login(user.uid, user.displayName));\n      })\n      .catch((err) => {\n        console.log(err);\n        Swal.fire(\"Error\", err.message, \"error\");\n      });\n  };\n};\n\nexport const startGoogleLogin = () => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithPopup(googleAuthProvider)\n      .then(({ user }) => {\n        const { uid, displayName } = user;\n        dispatch(login(uid, displayName));\n      });\n  };\n};\n\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: { uid, displayName },\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch(logout());\n        dispatch(cleanNotesLogout());\n      });\n  };\n};\n\nexport const logout = () => ({\n  type: types.logout,\n});\n","import React from \"react\";\nimport moment from \"moment\";\nimport { setActiveNote } from \"../../actions/notes\";\nimport { useDispatch } from \"react-redux\";\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n  const dispatch = useDispatch();\n  const noteDate = moment(date);\n\n  const handleEntryClick = () => {\n    dispatch(setActiveNote(id, { date, title, body, url }));\n  };\n\n  return (\n    <div\n      className=\"journal__entry animate__animated animate__fadeIn animate__faster\"\n      onClick={handleEntryClick}\n    >\n      {url && (\n        <div\n          className=\"journal__entry-picture\"\n          style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(${url})`,\n          }}\n        ></div>\n      )}\n      <div className=\"journal__entry-body\">\n        <p className=\"journal__entry-title\">{title || \"-Empty-\"} </p>\n        <p className=\"journal__entry-content\">{body || \"-Empty-\"}</p>\n      </div>\n      <div className=\"journal__entry-date-box\">\n        <span>{noteDate.format(\"dddd\")}</span>\n        <h4>{noteDate.format(\"Do\")}</h4>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { JournalEntry } from \"./JournalEntry\";\n\nexport const JournalEntries = () => {\n  const { entries } = useSelector((state) => state.notes);\n  // console.log(notes);\n  return (\n    <div className=\"journal__entries\">\n      {entries.map((entry) => (\n        <JournalEntry key={entry.id} {...entry} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../actions/auth\";\nimport { startCreateNote } from \"../../actions/notes\";\nimport { JournalEntries } from \"./JournalEntries\";\n\nexport const Sidebar = () => {\n  const { name } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  const handleAddNew = () => {\n    dispatch(startCreateNote());\n  };\n\n  return (\n    <aside className=\"journal__sidebar animate__animated animate__fadeInLeft\">\n      <div className=\"journal__sidebar-navbar\">\n        <h3 className=\"mt-5\">\n          <i className=\"far fa-moon\"></i>\n          <span className=\"ms-1\">{name}</span>\n        </h3>\n        <button className=\"btn\" onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n\n      <div className=\"journal__new-entry\" onClick={handleAddNew}>\n        <i className=\"far fa-calendar-plus fa-5x\"></i>\n        <p className=\"mt-5\">New entry</p>\n      </div>\n\n      <JournalEntries />\n    </aside>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NoteScreen } from \"../notes/NoteScreen\";\nimport { NothingSelectedScreen } from \"./NothingSelectedScreen\";\nimport { Sidebar } from \"./Sidebar\";\n\nexport const JournalScreen = () => {\n  const { active } = useSelector((state) => state.notes);\n  return (\n    <div\n      className=\"journal__main-content\"\n      style={{ backgroundColor: \"#5c62c5\" }}\n    >\n      <Sidebar />\n      <main>{active ? <NoteScreen /> : <NothingSelectedScreen />}</main>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  startGoogleLogin,\n  startLoginWithEmailPassword,\n} from \"../../actions/auth\";\nimport { useForm } from \"../../hooks/useForm\";\n\nexport const LoginScreen = () => {\n  const { loading } = useSelector((state) => state.ui);\n  const dispatch = useDispatch();\n  const [formValues, handleInputChange] = useForm({\n    email: \"jeanpier@mendoza.com\",\n    password: \"123456\",\n  });\n  const { email, password } = formValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLoginWithEmailPassword(email, password));\n  };\n\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin());\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title\">Login</h3>\n      <form\n        className=\"animate__animated animate__fadeIn animate__faster\"\n        onSubmit={handleLogin}\n      >\n        <input\n          className=\"auth__input\"\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={handleInputChange}\n        />\n        <button\n          className=\"btn btn-primary btn-block\"\n          disabled={loading}\n          type=\"submit\"\n        >\n          Login\n        </button>\n\n        {/* google button */}\n        <div className=\"auth__social-networks\">\n          <p>Login with social networks</p>\n\n          <div className=\"google-btn\" onClick={handleGoogleLogin}>\n            <div className=\"google-icon-wrapper\">\n              <img\n                className=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                alt=\"google button\"\n              />\n            </div>\n            <p className=\"btn-text\">\n              <b>Sign in with google</b>\n            </p>\n          </div>\n        </div>\n        <Link className=\"link\" to=\"/auth/register\">\n          Create new account\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport validator from \"validator\";\nimport { startRegisterWithEmailPasswordName } from \"../../actions/auth\";\nimport { removeError, setError } from \"../../actions/ui\";\nimport { useForm } from \"../../hooks/useForm\";\nimport {\n  isNotValid,\n  isRequired,\n  shouldBeAtLeast,\n  shouldBeMatch,\n} from \"../../messages/errors\";\n\nexport const RegisterScreen = () => {\n  const dispatch = useDispatch();\n  // useSelector, obtener el state de la aplicación (redux)\n  const { msgError } = useSelector((state) => state.ui);\n  const [formValues, handleInputChange] = useForm({\n    name: \"Jeanpier\",\n    email: \"jeanpier@mendoza.com\",\n    password: \"123456\",\n    password2: \"123456\",\n  });\n  const { name, email, password, password2 } = formValues;\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (isFormValid()) {\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\n    }\n  };\n\n  const isFormValid = () => {\n    if (name.trim().length === 0) {\n      dispatch(setError(isRequired(\"Name\")));\n      return false;\n    }\n    if (!validator.isEmail(email)) {\n      dispatch(setError(isNotValid(\"Email\")));\n      return false;\n    }\n    if (password.length < 6) {\n      dispatch(setError(shouldBeAtLeast(\"Password\", 6)));\n      return false;\n    }\n    if (password !== password2) {\n      dispatch(setError(shouldBeMatch(\"Password\")));\n      return false;\n    }\n\n    dispatch(removeError());\n    return true;\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title\">Register</h3>\n      <form\n        className=\"animate__animated animate__fadeIn animate__faster\"\n        onSubmit={handleRegister}\n      >\n        {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\n        <input\n          className=\"auth__input\"\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleInputChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"email\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={handleInputChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          placeholder=\"Confirm password\"\n          name=\"password2\"\n          value={password2}\n          onChange={handleInputChange}\n        />\n        <button className=\"btn btn-primary btn-block mb-5\" type=\"submit\">\n          Register\n        </button>\n\n        <Link className=\"link\" to=\"/auth/login\">\n          Already register?\n        </Link>\n      </form>\n    </>\n  );\n};\n","export const isRequired = (field = \"This field\") => {\n  return `${field} is required`;\n};\n\nexport const isNotValid = (field = \"This field\") => {\n  return `${field} is not valid`;\n};\n\nexport const shouldBeAtLeast = (field = \"This field\", nChars) => {\n  return `${field} should be at least ${nChars}`;\n};\nexport const shouldBeMatch = (field = \"This field\") => {\n  return `${field}s should be match`;\n};\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route path=\"/auth/login\" component={LoginScreen} />\n          <Route path=\"/auth/register\" component={RegisterScreen} />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { firebase } from \"../firebase/firebase.config\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../actions/auth\";\nimport { startLoadingNotes } from \"../actions/notes\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const [checking, setChecking] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    // observable\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (!user?.uid) {\n        setIsAuthenticated(false);\n        setChecking(false);\n        return;\n      }\n      // preserva el state del auth con la acción login\n      dispatch(login(user.uid, user.displayName));\n      setIsAuthenticated(true);\n      dispatch(startLoadingNotes(user.uid));\n      setChecking(false);\n    });\n  }, [dispatch, setChecking, setIsAuthenticated]);\n\n  if (checking) {\n    //waiting screen\n    return <h1>Wait...</h1>;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            path=\"/auth\"\n            component={AuthRouter}\n            isAuthenticated={isAuthenticated}\n          />\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={JournalScreen}\n            isAuthenticated={isAuthenticated}\n          />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../components/types/types\";\n\nconst initialState = { loading: false, msgError: null };\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiSetError:\n      return { ...state, msgError: action.payload };\n    case types.uiRemoveError:\n      return { ...state, msgError: null };\n    case types.uiStartLoading:\n      return { ...state, loading: true };\n    case types.uiFinishLoading:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import { types } from \"../components/types/types\";\n\n/*\n {\n   notes: [],\n   active: {\n     id: string,\n     title: string,\n     body: string,\n     imageUrl: string,\n     date: number\n   } | null\n }\n*/\nconst initialState = { entries: [], active: null };\n\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.notesSetActive:\n      return { ...state, active: { ...action.payload } };\n    case types.notesCreate:\n      return { ...state, entries: [action.payload, ...state.entries] };\n    case types.notesLoad:\n      return { ...state, entries: [...action.payload] };\n    case types.notesUpdate:\n      return {\n        ...state,\n        entries: state.entries.map((note) =>\n          note.id === action.payload.id ? action.payload.note : note\n        ),\n      };\n    case types.notesDelete:\n      return {\n        ...state,\n        active: null,\n        entries: state.entries.filter((entry) => entry.id !== action.payload),\n      };\n    case types.notesLogoutAndClean:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { authReducer } from \"../reducers/authReducer\";\nimport thunk from \"redux-thunk\";\nimport { uiReducer } from \"../reducers/uiReducer\";\nimport { notesReducer } from \"../reducers/notesReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\nconst reducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  notes: notesReducer,\n});\n\nexport const store = createStore(\n  reducers,\n  // config de redux con async middleware\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { types } from \"../components/types/types\";\n\n// const initialState = {\n//   uid: 2342247,\n//   name: \"Jeanpier\",\n//   dir: {\n//     b: 12,\n//   },\n// };\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return { uid: action.payload.uid, name: action.payload.displayName };\n    case types.logout:\n      return {};\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\nexport const JournalApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { JournalApp } from \"./JournalApp\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(<JournalApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}